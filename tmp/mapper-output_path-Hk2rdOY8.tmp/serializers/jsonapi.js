{"blocks":[{"tags":{"title":{"type":"title","string":"JSONAPISerializer","html":"<p>JSONAPISerializer</p>"}},"description":{"full":"<p>Renders the payload according to the JSONAPI 1.0 spec, including related\nresources, included records, and support for meta and links.</p>","summary":"<p>Renders the payload according to the JSONAPI 1.0 spec, including related\nresources, included records, and support for meta and links.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":16,"codeStart":23,"code":"export default Serializer.extend({","ctx":false},{"tags":{"method":{"type":"method","string":"render","html":"<p>render</p>"},"param":[{"type":"param","string":"{Object|Array|Error}   payload","name":"payload","description":"","types":["Object","Array","Error"],"typesDescription":"<code>Object</code>|<code>Array</code>|<code>Error</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object|Array|Error}   payload</p>"},{"type":"param","string":"{Object}               options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}               options</p>"}],"return":{"type":"return","string":"{Object}         the rendered JSONAPI document","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>the rendered JSONAPI document</p>"}},"description":{"full":"<p>Take a payload (a model, an array of models, or an Error) and render it as\na JSONAPI compliant document</p>","summary":"<p>Take a payload (a model, an array of models, or an Error) and render it as\na JSONAPI compliant document</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":25,"codeStart":36,"code":"render(payload, options) {\n  let document = {};\n  this.renderPrimary(payload, document, options);\n  this.renderIncluded(payload, document, options);\n  this.renderMeta(payload, document, options);\n  this.renderLinks(payload, document, options);\n  this.renderVersion(payload, document, options);\n  this.dedupeIncluded(document);\n  return document;\n},","ctx":{"type":"method","name":"render","string":"render()"}},{"tags":{"method":{"type":"method","string":"renderPrimary","html":"<p>renderPrimary</p>"},"see":{"type":"see","string":"{@link http://jsonapi.org/format/#document-top-level|JSONAPI spec}","title":"","url":"{@link http://jsonapi.org/format/#document-top-level|JSONAPI spec}","html":"<p>{@link <a href=\"http://jsonapi.org/format/#document-top-level|JSONAPI\">http://jsonapi.org/format/#document-top-level|JSONAPI</a> spec}</p>"},"param":[{"type":"param","string":"{Object|Array}   payload    errors or models to render","name":"payload","description":"<p>errors or models to render</p>","types":["Object","Array"],"typesDescription":"<code>Object</code>|<code>Array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}         document   top level document to render into","name":"document","description":"<p>top level document to render into</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}         options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}         options</p>"}]},"description":{"full":"<p>Render the primary payload for a JSONAPI document (either a model or array\nof models).</p>","summary":"<p>Render the primary payload for a JSONAPI document (either a model or array\nof models).</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":47,"codeStart":58,"code":"renderPrimary(payload, document, options) {\n  if (isArray(payload)) {\n    if (payload[0] instanceof Error) {\n      document.errors = payload.map((error) => {\n        return this.renderError(error, options);\n      });\n    } else {\n      document.data = payload.map((record) => {\n        return this.renderRecord(record, document, options);\n      });\n    }\n  } else {\n    if (payload instanceof Error) {\n      document.errors = [ this.renderError(payload, options) ];\n    } else {\n      document.data = this.renderRecord(payload, document, options);\n    }\n  }\n},","ctx":{"type":"method","name":"renderPrimary","string":"renderPrimary()"}},{"tags":{"method":{"type":"method","string":"renderIncluded","html":"<p>renderIncluded</p>"},"param":[{"type":"param","string":"{Object|Array} payload","name":"payload","description":"","types":["Object","Array"],"typesDescription":"<code>Object</code>|<code>Array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object|Array} payload</p>"},{"type":"param","string":"{Object}       document  top level JSONAPI document","name":"document","description":"<p>top level JSONAPI document</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}       options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}       options</p>"},{"type":"param","string":"{Object}       options.included  array of records to sideload","name":"options.included","description":"<p>array of records to sideload</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"isNested":true}]},"description":{"full":"<p>Render any included records into the top level of the document</p>","summary":"<p>Render any included records into the top level of the document</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":78,"codeStart":88,"code":"renderIncluded(payload, document, options) {\n  if (options.included) {\n    assert(isArray(options.included), 'included records must be passed in as an array');\n    document.included = options.included.map((includedRecord) => {\n      return this.renderRecord(includedRecord, options);\n    });\n  }\n},","ctx":{"type":"method","name":"renderIncluded","string":"renderIncluded()"}},{"tags":{"method":{"type":"method","string":"renderMeta","html":"<p>renderMeta</p>"},"param":[{"type":"param","string":"{Object|Array}   payload","name":"payload","description":"","types":["Object","Array"],"typesDescription":"<code>Object</code>|<code>Array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object|Array}   payload</p>"},{"type":"param","string":"{Object}         document  top level JSONAPI document","name":"document","description":"<p>top level JSONAPI document</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}         options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}         options</p>"},{"type":"param","string":"{Object}         options.meta","name":"options.meta","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}         options.meta</p>","isNested":true}]},"description":{"full":"<p>Render top level meta object for a document. Default uses meta supplied in\noptions call to res.render().</p>","summary":"<p>Render top level meta object for a document. Default uses meta supplied in\noptions call to res.render().</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":97,"codeStart":108,"code":"renderMeta(payload, document, options) {\n  if (options.meta) {\n    document.meta = options.meta;\n  }\n},","ctx":{"type":"method","name":"renderMeta","string":"renderMeta()"}},{"tags":{"method":{"type":"method","string":"renderLinks","html":"<p>renderLinks</p>"},"param":[{"type":"param","string":"{Object|Array}   payload","name":"payload","description":"","types":["Object","Array"],"typesDescription":"<code>Object</code>|<code>Array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object|Array}   payload</p>"},{"type":"param","string":"{Object}         document  top level JSONAPI document","name":"document","description":"<p>top level JSONAPI document</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}         options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}         options</p>"},{"type":"param","string":"{Object}         options.links","name":"options.links","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}         options.links</p>","isNested":true}]},"description":{"full":"<p>Render top level links object for a document. Defaults to the links\nsupplied in options to res.render().</p>","summary":"<p>Render top level links object for a document. Defaults to the links\nsupplied in options to res.render().</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":114,"codeStart":125,"code":"renderLinks(payload, document, options) {\n  if (options.links) {\n    document.links = options.links;\n  }\n},","ctx":{"type":"method","name":"renderLinks","string":"renderLinks()"}},{"tags":{"method":{"type":"method","string":"renderVersion","html":"<p>renderVersion</p>"},"param":[{"type":"param","string":"{Object|Array}   payload","name":"payload","description":"","types":["Object","Array"],"typesDescription":"<code>Object</code>|<code>Array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object|Array}   payload</p>"},{"type":"param","string":"{Object}         document  top level JSONAPI document","name":"document","description":"<p>top level JSONAPI document</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}         options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}         options</p>"}]},"description":{"full":"<p>Render the version of JSONAPI supported.</p>","summary":"<p>Render the version of JSONAPI supported.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":131,"codeStart":140,"code":"renderVersion(payload, document) {\n  document.jsonapi = {\n    version: '1.0'\n  };\n},","ctx":{"type":"method","name":"renderVersion","string":"renderVersion()"}},{"tags":{"method":{"type":"method","string":"renderRecord","html":"<p>renderRecord</p>"},"see":{"type":"see","string":"{@link http://jsonapi.org/format/#document-resource-objects|JSONAPI spec}","title":"","url":"{@link http://jsonapi.org/format/#document-resource-objects|JSONAPI spec}","html":"<p>{@link <a href=\"http://jsonapi.org/format/#document-resource-objects|JSONAPI\">http://jsonapi.org/format/#document-resource-objects|JSONAPI</a> spec}</p>"},"param":[{"type":"param","string":"{Object}     options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}     options</p>"},{"type":"param","string":"{Object}     record","name":"record","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}     record</p>"}],"return":{"type":"return","string":"{Object}             a resource object representing the record","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>a resource object representing the record</p>"}},"description":{"full":"<p>Render the supplied record as a resource object.</p>","summary":"<p>Render the supplied record as a resource object.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":146,"codeStart":157,"code":"renderRecord(record, document, options) {\n  let serializedRecord = {\n    type: this.adapter.typeForRecord(record, options),\n    id: this.adapter.idForRecord(record, options)\n  };\n  setIfNotEmpty(serializedRecord, 'attributes', this.attributesForRecord(record, options));\n  setIfNotEmpty(serializedRecord, 'relationships', this.relationshipsForRecord(record, document, options));\n  setIfNotEmpty(serializedRecord, 'links', this.linksForRecord(record, options));\n  setIfNotEmpty(serializedRecord, 'meta', this.metaForRecord(record, options));\n  return serializedRecord;\n},","ctx":{"type":"method","name":"renderRecord","string":"renderRecord()"}},{"tags":{"method":{"type":"method","string":"attributesForRecord","html":"<p>attributesForRecord</p>"},"see":{"type":"see","string":"{@link http://jsonapi.org/format/#document-resource-object-attributes|JSONAPI spec}","title":"","url":"{@link http://jsonapi.org/format/#document-resource-object-attributes|JSONAPI spec}","html":"<p>{@link <a href=\"http://jsonapi.org/format/#document-resource-object-attributes|JSONAPI\">http://jsonapi.org/format/#document-resource-object-attributes|JSONAPI</a> spec}</p>"},"param":[{"type":"param","string":"{Object}            record","name":"record","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}            record</p>"},{"type":"param","string":"{Object}            options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}            options</p>"}],"return":{"type":"return","string":"{Object}                    the JSONAPI attributes object","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>the JSONAPI attributes object</p>"}},"description":{"full":"<p>Returns the JSONAPI attributes object representing this record&#39;s\nrelationships</p>","summary":"<p>Returns the JSONAPI attributes object representing this record&#39;s\nrelationships</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":169,"codeStart":181,"code":"attributesForRecord(record, options) {\n  return this.serializeAttributes(record, options);\n},","ctx":{"type":"method","name":"attributesForRecord","string":"attributesForRecord()"}},{"tags":{"method":{"type":"method","string":"relationshipsForRecord","html":"<p>relationshipsForRecord</p>"},"see":{"type":"see","string":"{@link http://jsonapi.org/format/#document-resource-object-relationships|JSONAPI spec","title":"","url":"{@link http://jsonapi.org/format/#document-resource-object-relationships|JSONAPI spec","html":"<p>{@link <a href=\"http://jsonapi.org/format/#document-resource-object-relationships|JSONAPI\">http://jsonapi.org/format/#document-resource-object-relationships|JSONAPI</a> spec</p>"},"param":[{"type":"param","string":"{Object}            record","name":"record","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}            record</p>"},{"type":"param","string":"{Object}            options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}            options</p>"}],"return":{"type":"return","string":"{Object}                    the JSONAPI relationships object","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>the JSONAPI relationships object</p>"}},"description":{"full":"<p>Returns the JSONAPI relationships object representing this record&#39;s\nrelationships</p>","summary":"<p>Returns the JSONAPI relationships object representing this record&#39;s\nrelationships</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":185,"codeStart":197,"code":"relationshipsForRecord(record, document, options) {\n  let relationships = this.serializeRelationships(record, options);\n  return mapValues(relationships, (descriptor, relationshipName) => {\n    let relationship = {};\n    setIfNotEmpty(relationship, 'links', this.linksForRelationship(relationshipName, descriptor, record, options));\n    setIfNotEmpty(relationship, 'data', this.dataForRelationship(relationshipName, descriptor, record, document, options));\n    setIfNotEmpty(relationship, 'meta', this.metaForRelationship(relationshipName, descriptor, record, options));\n    return relationship;\n  });\n},","ctx":{"type":"method","name":"relationshipsForRecord","string":"relationshipsForRecord()"}},{"tags":{"method":{"type":"method","string":"linksForRelationship","html":"<p>linksForRelationship</p>"},"param":[{"type":"param","string":"{String}             name       name of the relationship","name":"name","description":"<p>name of the relationship</p>","types":["String"],"typesDescription":"<code>String</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}             descriptor descriptor for the relationship","name":"descriptor","description":"<p>descriptor for the relationship</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}             record     parent record containing the\n                                        relationships","name":"record","description":"<p>parent record containing the                                         relationships</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"return":{"type":"return","string":"{Object}                        the links object for the supplied\n                                        relationship","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>the links object for the supplied                                         relationship</p>"}},"description":{"full":"<p>Takes a relationship descriptor and the record it&#39;s for, and returns any\nlinks for that relationship for that record. I.e. &#39;/books/1/author&#39;</p>","summary":"<p>Takes a relationship descriptor and the record it&#39;s for, and returns any\nlinks for that relationship for that record. I.e. &#39;/books/1/author&#39;</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":208,"codeStart":222,"code":"linksForRelationship(name, descriptor, record, options) {\n  let recordURL = this.linksForRecord(record, options).self;\n  return {\n    self: path.join(recordURL, 'relationships/' + name),\n    related: path.join(recordURL, name)\n  };\n},","ctx":{"type":"method","name":"linksForRelationship","string":"linksForRelationship()"}},{"tags":{"method":{"type":"method","string":"dataForRelationship","html":"<p>dataForRelationship</p>"},"param":[{"type":"param","string":"{String}               name       name of the relationship","name":"name","description":"<p>name of the relationship</p>","types":["String"],"typesDescription":"<code>String</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}               descriptor","name":"descriptor","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}               descriptor</p>"},{"type":"param","string":"{Object[]|Object|String|Number|String[]|Number[]}    descriptor.data  the related id(s) or record(s)","name":"descriptor.data","description":"<p>the related id(s) or record(s)</p>","types":["Array.<Object>","Object","String","Number","Array.<String>","Array.<Number>"],"typesDescription":"<code>Array</code>.&lt;<code>Object</code>&gt;|<code>Object</code>|<code>String</code>|<code>Number</code>|<code>Array</code>.&lt;<code>String</code>&gt;|<code>Array</code>.&lt;<code>Number</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false,"isNested":true},{"type":"param","string":"{String|Number}        descriptor.config  the user supplied relationship config","name":"descriptor.config","description":"<p>the user supplied relationship config</p>","types":["String","Number"],"typesDescription":"<code>String</code>|<code>Number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"isNested":true},{"type":"param","string":"{Object}               record     the parent record that holds this\n                                          relationship","name":"record","description":"<p>the parent record that holds this                                           relationship</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}               document   top level JSONAPI document","name":"document","description":"<p>top level JSONAPI document</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}               options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}               options</p>"}],"return":{"type":"return","string":"{Object[]}                       array of resource identifiers","types":["Array.<Object>"],"typesDescription":"<code>Array</code>.&lt;<code>Object</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>array of resource identifiers</p>"}},"description":{"full":"<p>Takes a relationship descriptor and a record it&#39;s for, and returns the\ndata for that relationship. Also sideloads any included records in the\ntop level included namespace.</p>","summary":"<p>Takes a relationship descriptor and a record it&#39;s for, and returns the\ndata for that relationship. Also sideloads any included records in the\ntop level included namespace.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":230,"codeStart":248,"code":"dataForRelationship(name, descriptor, record, document, options) {\n  let { strategy, type } = descriptor.config;\n  let data = descriptor.data;\n\n  if (strategy === 'ids') {\n    return data.map((id) => {\n      return { type, id };\n    });\n  } else if (strategy === 'id') {\n    return { type, id: descriptor.data };\n  } else if (strategy === 'records') {\n    return data.map((relatedRecord) => {\n      this.includeRecord(name, relatedRecord, descriptor, document, options);\n      return { type, id: this.adapter.idForRecord(relatedRecord) };\n    });\n  } else if (strategy === 'record') {\n    this.includeRecord(name, data, descriptor, document, options);\n    return { type, id: this.adapter.idForRecord(data) };\n  }\n},","ctx":{"type":"method","name":"dataForRelationship","string":"dataForRelationship()"}},{"tags":{"method":{"type":"method","string":"metaForRelationship","html":"<p>metaForRelationship</p>"},"param":[{"type":"param","string":"{String}            name       name of the relationship","name":"name","description":"<p>name of the relationship</p>","types":["String"],"typesDescription":"<code>String</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}            descriptor descriptor for the relationship","name":"descriptor","description":"<p>descriptor for the relationship</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}            record     parent record containing the\n                                       relationship","name":"record","description":"<p>parent record containing the                                        relationship</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}            options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}            options</p>"}],"return":{"type":"return","string":"{Object}","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{Object}</p>"}},"description":{"full":"<p>Returns any meta for a given relationship and record. No meta included by\ndefault.</p>","summary":"<p>Returns any meta for a given relationship and record. No meta included by\ndefault.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":269,"codeStart":283,"code":"metaForRelationship() {},","ctx":{"type":"method","name":"metaForRelationship","string":"metaForRelationship()"}},{"tags":{"method":{"type":"method","string":"linksForRecord","html":"<p>linksForRecord</p>"},"param":[{"type":"param","string":"{Object}       record  [description]","name":"record","description":"<p>[description]</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}       options [description]","name":"options","description":"<p>[description]</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"return":{"type":"return","string":"{Object}               [description]","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>[description]</p>"}},"description":{"full":"<p>Returns links for a particular record, i.e. self: &quot;/books/1&quot;</p>","summary":"<p>Returns links for a particular record, i.e. self: &quot;/books/1&quot;</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":285,"codeStart":295,"code":"linksForRecord(record, options) {\n  return {\n    self: '/' + this.adapter.typeForRecord(record, options) + '/' + this.adapter.idForRecord(record, options)\n  };\n},","ctx":{"type":"method","name":"linksForRecord","string":"linksForRecord()"}},{"tags":{"method":{"type":"method","string":"metaForRecord","html":"<p>metaForRecord</p>"},"param":[{"type":"param","string":"{Object}      record","name":"record","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}      record</p>"},{"type":"param","string":"{Object}      options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}      options</p>"}],"return":{"type":"return","string":"{Object}","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{Object}</p>"}},"description":{"full":"<p>Returns meta for a particular record.</p>","summary":"<p>Returns meta for a particular record.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":301,"codeStart":311,"code":"metaForRecord() {},","ctx":{"type":"method","name":"metaForRecord","string":"metaForRecord()"}},{"tags":{"method":{"type":"method","string":"includeRecord","html":"<p>includeRecord</p>"},"private":{"type":"private","string":"","visibility":"private","html":""},"param":[{"type":"param","string":"{Object}      record   the record to sideload","name":"record","description":"<p>the record to sideload</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}      descriptor","name":"descriptor","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}      descriptor</p>"},{"type":"param","string":"{Object}      descriptor.config","name":"descriptor.config","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}      descriptor.config</p>","isNested":true},{"type":"param","string":"{Object}      descriptor.config.type","name":"descriptor.config.type","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}      descriptor.config.type</p>","isNested":true},{"type":"param","string":"{Object}      descriptor.config.strategy","name":"descriptor.config.strategy","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}      descriptor.config.strategy</p>","isNested":true},{"type":"param","string":"{Object}      descriptor.data","name":"descriptor.data","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}      descriptor.data</p>","isNested":true},{"type":"param","string":"{Object}      document the top level JSONAPI document","name":"document","description":"<p>the top level JSONAPI document</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}      options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}      options</p>"}]},"description":{"full":"<p>Sideloads a record into the top level &quot;included&quot; array</p>","summary":"<p>Sideloads a record into the top level &quot;included&quot; array</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":313,"codeStart":328,"code":"includeRecord(name, record, descriptor, document, options) {\n  if (!isArray(document.included)) {\n    document.included = [];\n  }\n  options = options.relationships[name];\n  let relatedSerializer = descriptor.config.serializer || this.serializerFor(record, options);\n  document.included.push(relatedSerializer.renderRecord(record, document, options));\n},","ctx":{"type":"method","name":"includeRecord","string":"includeRecord()"}},{"tags":{"method":{"type":"method","string":"renderError","html":"<p>renderError</p>"},"param":[{"type":"param","string":"{Error}    error","name":"error","description":"","types":["Error"],"typesDescription":"<code>Error</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Error}    error</p>"}],"return":{"type":"return","string":"{Object}          the JSONAPI error object","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>the JSONAPI error object</p>"}},"description":{"full":"<p>Render the supplied error</p>","summary":"<p>Render the supplied error</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":337,"codeStart":346,"code":"renderError(error) {\n  let renderedError = {\n    id: error.id,\n    status: error.status || 500,\n    code: error.code || 'InternalServerError',\n    title: error.title,\n    detail: error.message\n  };\n  setIfNotEmpty(renderedError, 'source', this.sourceForError(error));\n  setIfNotEmpty(renderedError, 'meta', this.metaForError(error));\n  setIfNotEmpty(renderedError, 'links', this.linksForError(error));\n  return renderedError;\n},","ctx":{"type":"method","name":"renderError","string":"renderError()"}},{"tags":{"method":{"type":"method","string":"sourceForError","html":"<p>sourceForError</p>"},"see":{"type":"see","string":"{@link http://jsonapi.org/format/#error-objects|JSONAPI spec}","title":"","url":"{@link http://jsonapi.org/format/#error-objects|JSONAPI spec}","html":"<p>{@link <a href=\"http://jsonapi.org/format/#error-objects|JSONAPI\">http://jsonapi.org/format/#error-objects|JSONAPI</a> spec}</p>"},"param":[{"type":"param","string":"{Error}      error","name":"error","description":"","types":["Error"],"typesDescription":"<code>Error</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Error}      error</p>"}],"return":{"type":"return","string":"{Object}            an error source object, optionally including a\n                            \"pointer\" JSON Pointer or \"parameter\" for the\n                            query param that caused the error.","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>an error source object, optionally including a                             &quot;pointer&quot; JSON Pointer or &quot;parameter&quot; for the\n                            query param that caused the error.</p>"}},"description":{"full":"<p>Given an error, return a JSON Pointer, a URL query param name, or other\ninfo indicating the source of the error.</p>","summary":"<p>Given an error, return a JSON Pointer, a URL query param name, or other\ninfo indicating the source of the error.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":360,"codeStart":373,"code":"sourceForError() {},","ctx":{"type":"method","name":"sourceForError","string":"sourceForError()"}},{"tags":{"method":{"type":"method","string":"metaForError","html":"<p>metaForError</p>"},"param":[{"type":"param","string":"{Error}     error","name":"error","description":"","types":["Error"],"typesDescription":"<code>Error</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Error}     error</p>"}],"return":{"type":"return","string":"{Object}","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{Object}</p>"}},"description":{"full":"<p>Return the meta for a given error object. You could use this for example,\nto return debug information in development environments.</p>","summary":"<p>Return the meta for a given error object. You could use this for example,\nto return debug information in development environments.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":375,"codeStart":385,"code":"metaForError() {},","ctx":{"type":"method","name":"metaForError","string":"metaForError()"}},{"tags":{"method":{"type":"method","string":"linksForError","html":"<p>linksForError</p>"},"param":[{"type":"param","string":"{Error}      error","name":"error","description":"","types":["Error"],"typesDescription":"<code>Error</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Error}      error</p>"}],"return":{"type":"return","string":"{Object}","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"","html":"<p>{Object}</p>"}},"description":{"full":"<p>Return a links object for an error. You could use this to link to a bug\ntracker report of the error, for example.</p>","summary":"<p>Return a links object for an error. You could use this to link to a bug\ntracker report of the error, for example.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":387,"codeStart":397,"code":"linksForError() {},","ctx":{"type":"method","name":"linksForError","string":"linksForError()"}},{"tags":{"method":{"type":"method","string":"dedupeIncluded","html":"<p>dedupeIncluded</p>"},"private":{"type":"private","string":"","visibility":"private","html":""},"param":[{"type":"param","string":"{Object}       document  the top level JSONAPI document","name":"document","description":"<p>the top level JSONAPI document</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}]},"description":{"full":"<p>Remove duplicate entries from the sideloaded data.</p>","summary":"<p>Remove duplicate entries from the sideloaded data.</p>","body":""},"isPrivate":true,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":399,"codeStart":407,"code":"dedupeIncluded(document) {\n  if (isArray(document.included)) {\n    document.included = uniq(document.included, function(resource) {\n      return resource.type + '/' + resource.id;\n    });\n  }\n}\n\n});","ctx":{"type":"method","name":"dedupeIncluded","string":"dedupeIncluded()"}}],"url":"lib/serializers/jsonapi.js","path":"lib/serializers/jsonapi.js","name":"JSONAPISerializer"}