{"blocks":[{"tags":{"title":{"type":"title","string":"Adapter","html":"<p>Adapter</p>"}},"description":{"full":"<p>Adapters let the blackburn talk to your models, regardless of what ORM you\nare using. They are essentially a small shim / translation layer between your\nORM and blackburn.</p>","summary":"<p>Adapters let the blackburn talk to your models, regardless of what ORM you\nare using. They are essentially a small shim / translation layer between your\nORM and blackburn.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":3,"codeStart":11,"code":"export default CoreObject.extend({","ctx":false},{"tags":{"method":{"type":"method","string":"idForRecord","html":"<p>idForRecord</p>"},"param":[{"type":"param","string":"{Object}  record","name":"record","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}  record</p>"},{"type":"param","string":"{Object}  options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}  options</p>"}],"return":{"type":"return","string":"{String|Number}    id for the record","types":["String","Number"],"typesDescription":"<code>String</code>|<code>Number</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>id for the record</p>"}},"description":{"full":"<p>Given a record, return it&#39;s id.</p>","summary":"<p>Given a record, return it&#39;s id.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":13,"codeStart":23,"code":"idForRecord() {\n  throw new Error('You must implement this method');\n},","ctx":{"type":"method","name":"idForRecord","string":"idForRecord()"}},{"tags":{"method":{"type":"method","string":"typeForRecord","html":"<p>typeForRecord</p>"},"param":[{"type":"param","string":"{Object}  record","name":"record","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}  record</p>"},{"type":"param","string":"{Object}  options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}  options</p>"}],"return":{"type":"return","string":"{String}      the type of the record","types":["String"],"typesDescription":"<code>String</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>the type of the record</p>"}},"description":{"full":"<p>Given a record, return it&#39;s type.</p>","summary":"<p>Given a record, return it&#39;s type.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":37,"code":"typeForRecord() {\n  throw new Error('You must implement this method');\n},","ctx":{"type":"method","name":"typeForRecord","string":"typeForRecord()"}},{"tags":{"method":{"type":"method","string":"attributeFromRecord","html":"<p>attributeFromRecord</p>"},"param":[{"type":"param","string":"{Object}  record  the record to extract the attribute from","name":"record","description":"<p>the record to extract the attribute from</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{String}  attributeName","name":"attributeName","description":"","types":["String"],"typesDescription":"<code>String</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{String}  attributeName</p>"},{"type":"param","string":"{Object}  options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}  options</p>"}],"return":{"type":"return","string":"{*}            the value of the attribute","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>the value of the attribute</p>"}},"description":{"full":"<p>Given a record and attribute name, return the value of the attribute.</p>","summary":"<p>Given a record and attribute name, return the value of the attribute.</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":41,"codeStart":52,"code":"attributeFromRecord() {\n  throw new Error('You must implement this method');\n},","ctx":{"type":"method","name":"attributeFromRecord","string":"attributeFromRecord()"}},{"tags":{"method":{"type":"method","string":"relationshipFromRecord","html":"<p>relationshipFromRecord</p>"},"param":[{"type":"param","string":"{Object}  record  the record to extract the relationship from","name":"record","description":"<p>the record to extract the relationship from</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}  relationshipName  the name of the relationship","name":"relationshipName","description":"<p>the name of the relationship</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}  relationshipConfig  the serialization config for this\n                                     relationship","name":"relationshipConfig","description":"<p>the serialization config for this                                      relationship</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{Object}  relationshipConfig.strategy  the specific strategy for\n                                              serialization ('include' or\n                                              'id-only')","name":"relationshipConfig.strategy","description":"<p>the specific strategy for                                               serialization (&#39;include&#39; or\n                                              &#39;id-only&#39;)</p>","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"isNested":true},{"type":"param","string":"{Object}  options","name":"options","description":"","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"html":"<p>{Object}  options</p>"}],"return":{"type":"return","string":"{Object}         the relationship descriptor, which should include\n                         an id, ids, record, or records property based on\n                         the supplied","types":["Object"],"typesDescription":"<code>Object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<p>the relationship descriptor, which should include                          an id, ids, record, or records property based on\n                         the supplied</p>"}},"description":{"full":"<p>Return the requested relationship from the supplied record. The returned\nobject must contain the <code>type</code> of the related records, and optionally can\ninclude any of the following:</p><ul>\n<li>records - an array of records to potentially embed in the response\n*</li>\n</ul>\n","summary":"<p>Return the requested relationship from the supplied record. The returned\nobject must contain the <code>type</code> of the related records, and optionally can\ninclude any of the following:</p>","body":"<ul>\n<li>records - an array of records to potentially embed in the response\n*</li>\n</ul>\n"},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":56,"codeStart":79,"code":"relationshipFromRecord() {\n  throw new Error('You must implement this method');\n}\n\n});","ctx":{"type":"method","name":"relationshipFromRecord","string":"relationshipFromRecord()"}}],"url":"lib/adapter.js","path":"lib/adapter.js","name":"Adapter"}